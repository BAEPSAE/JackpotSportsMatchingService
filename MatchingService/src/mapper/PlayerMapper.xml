<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.PlayerMapper">

  <!-- 개인정보 가져오기 -->
   <select id="getUserInfo" parameterType="String" resultType="Player">
      SELECT*FROM PLAYER WHERE USER_ID=#{user_Id}
   </select>
   
   <!-- 종목별 전적 가져오기 -->
   <select id="getUserRecord" parameterType="String" resultType="Record">
      SELECT R.* FROM PLAYER P, RECORD R WHERE P.RECORD_ID=R.RECORD_ID AND P.USER_ID=#{user_Id}
   </select>
   
   <!-- 종목별 경기장 정보 가져오기 -->
   <select id="getUserGround" parameterType="HashMap" resultType="Grounds">
      SELECT G.GROUND_NAME
      , G.GROUND_PHONE
      , G.GROUND_ADDRESS
      , G.GROUND_TYPE
      FROM GROUNDS G, 
        (SELECT GROUND_ID, COUNT(GROUND_ID)AS GROUNDS
        <if test="sports==1">
        	FROM (SELECT GAME_TYPE, GROUND_ID, WINNER_ID FROM GAMES WHERE WINNER_ID=#{user_Id} AND GAME_TYPE=1)
        </if>
        <if test="sports==2">
        	FROM (SELECT GAME_TYPE, GROUND_ID, WINNER_ID FROM GAMES WHERE WINNER_ID=#{user_Id} AND GAME_TYPE=2)
        </if>
        <if test="sports==3">
        	FROM (SELECT GAME_TYPE, GROUND_ID, WINNER_ID FROM GAMES WHERE WINNER_ID=#{user_Id} AND GAME_TYPE=3)
        </if>
        <if test="sports==4">
        	FROM (SELECT GAME_TYPE, GROUND_ID, WINNER_ID FROM GAMES WHERE WINNER_ID=#{user_Id} AND GAME_TYPE=4)
        </if>
        WHERE ROWNUM=1
        GROUP BY GROUND_ID
        ORDER BY GROUNDS DESC) GA 
      WHERE GA.GROUND_ID=G.GROUND_ID
   </select>


  <!-- 팀 소속 멤버리스트 -->
   <select id="getPlayerList" resultType="Player" parameterType="HashMap">
   		select * from PLAYER 
   		<if test="selector==1">
   			where TEAM1=#{team_Id} and TEAM1_FLAG=#{type}
   		</if>
   		<if test="selector==2">
   			where TEAM2=#{team_Id} and TEAM2_FLAG=#{type}
   		</if>
   		order by user_name
   		
   </select>
   
	<!-- 회원 가입 -->
	<insert id="insertRecord">
		INSERT INTO RECORD (record_id) values (SEQ_RECORD.nextval)
	</insert>
	<insert id="insertPlayer" parameterType="Player">
		INSERT INTO PLAYER (user_id, user_name,user_pw,user_location,user_phone,record_id,savefileName) VALUES (#{user_Id}, #{user_Name}, #{user_Pw}, #{user_Location}, #{user_Phone},SEQ_RECORD.currval,#{saveFileName})
	</insert>
	
	<!-- 로그인 -->
	<select id="getUser" parameterType="Player" resultType="Player">
		SELECT * FROM PLAYER WHERE USER_ID=#{user_Id} AND USER_PW=#{user_Pw}
	</select>
	
	<!-- 업데이트 -->
	<update id="changeTeam" parameterType="HashMap">
		update PLAYER set
		<if test="selector==1">
			TEAM1=#{team, jdbcType=INTEGER}
			, TEAM1_FLAG=#{team_flag, jdbcType=INTEGER}
		</if>
		<if test="selector==2">
			TEAM2=#{team}
			, TEAM2_FLAG=#{team_flag, jdbcType=INTEGER}
		</if>
		 where USER_ID=#{user_Id, jdbcType=INTEGER}
	</update>	
	
	<!-- 개인의 모든매칭 리스트 /진행중인것도 지나간것도 -->
	<select id="getMatchingList1" parameterType="Player" resultType="Matching">
		select * from matching where player = #{user_Id} and game_date > sysdate
	</select>
	<select id="getMatchingList2" parameterType="String" resultType="Matching">
		select * from matching where player = #{team1} and game_date > sysdate
	</select>
	<select id="getMatchingList3" parameterType="String" resultType="Matching">
		select * from matching where player = #{team2} and game_date > sysdate
	</select>
	
	<select id="prevgamelist1" parameterType="Player" resultType="Games">
		select * from games where player1 = #{user_Id} or player2 = #{user_Id}
	</select>
	<select id="prevgamelist2" parameterType="String" resultType="Games">
		select * from games where player1 = #{team1} or player2 = #{team1}
	</select>
	<select id="prevgamelist3" parameterType="String" resultType="Games">
		select * from games where player1 = #{team2} or player2 = #{team2}
	</select>
	
	<update id="tobecontinue" parameterType="Matching">
		update matching set matching_Time = sysdate where matching_Id = #{matching_Id}	
	</update>
	<delete id="deletematching" parameterType="Matching">
      delete from matching where matching_Id = #{matching_Id}
   </delete>
   
   <select id="getpprankinglist" resultType="Player">
      select * from player order by pp_score desc
   </select>
   <select id="ppsearch" parameterType="Player" resultType="Player">
      select * from player where user_location = #{user_Location} order by pp_score desc
   </select>
   <select id="getblrankinglist" resultType="Player">
      select * from player order by bl_score desc
   </select>
   <select id="blsearch" parameterType="Player" resultType="Player">
      select * from player where user_location = #{user_Location} order by bl_score desc
   </select>
   <select id="getscrankinglist" resultType="Team">
      select * from team where team_gametype = '축구' order by team_score desc
   </select>
   
   <select id="getbarankinglist" resultType="Team">
      select * from team where team_gametype = '야구' order by team_score desc
   </select>
</mapper>
